name: Deploy To AKS

on:
  workflow_dispatch:
    inputs:
      ACTION:
        description: Action to perform
        default: build
        type: choice
        options:
          - build-service
          - destroy-service
        required: true

# permissions:
#       id-token: write
#       contents: read

jobs:
  test:
   runs-on: ubuntu-latest
   steps:
    - name: "Checkout source code"
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

# jobs:
#   dependency:
#     name: Install Dependencies
#     runs-on: ubuntu-latest
  build-service:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.ACTION == 'build-service' }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Install neccessary dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip wget apt-transport-https gnupg2 software-properties-common git ca-certificates

      - name: Install Azure CLI
        uses: pietrobolcato/install-azure-cli-action@v1.0.1

      - name: Install Terraform
        uses: little-core-labs/install-terraform@v2.0.0
        with:
          version: 1.7.5

      - name: Install kubectl
        run: |
          sudo snap install kubectl --classic

      - name: Install Helm
        uses: Azure/setup-helm@v4.2.0

      - name: Azure login
        run: az login

      - name: Terraform init, plan and apply(infrastructure)
        run: |
          if [ -d "SocksShop" ]; then
            cd ./SocksShop/infrastructure && \
            terraform init || { echo "Terraform initialization failed"; exit 1; } && \
            terraform validate || { echo "Terraform validation failed"; exit 1; } && \
            terraform plan -out=tfplan || { echo "Terraform planning failed"; exit 1; } && \
            terraform apply tfplan || { echo "Terraform apply failed"; exit 1; }
          else
            echo "The 'infrastructure' directory does not exist."
            exit 1
          fi
      
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group victor-capstone-rg --name victor-capstoneaks

      - name: Deploy Kube App
        run: |
          if [ -d "SocksShop" ]; then
            cd ./SocksShop/k8s && \
            kubectl apply -f .;
          fi

      # - name: Deploy Prometheus
      #   run: |
      #     cd Monitoring && \
      #     attempt=1 && \
      #     until kubectl apply $(ls *-prometheus-*.yaml | awk ' { print " -f " $1 } '); do
      #       if [ $attempt -eq 2 ]; then
      #         echo "Failed to apply Prometheus Stack CRDs after 2 attempts"
      #         exit 1
      #       fi
      #       echo "Retrying applying Prometheus Stack CRDs (attempt $attempt)"
      #       sleep 10
      #       ((attempt++))
      #     done

      # - name: Deploy Grafana
      #   run: |
      #     cd Monitoring && \
      #     attempt=1 && \
      #     until kubectl apply $(ls *-grafana-*.yaml | awk ' { print " -f " $1 }'  | grep -v grafana-import); do
      #       if [ $attempt -eq 2 ]; then
      #         echo "Failed to apply Prometheus Stack CRDs after 2 attempts"
      #         exit 1
      #       fi
      #       echo "Retrying applying Prometheus Stack CRDs (attempt $attempt)"
      #       sleep 10
      #       ((attempt++))
      #     done

      # - name: Apply Grafana
      #   run: |
      #     cd Monitoring && \
      #     kubectl apply -f 23-grafana-import-dash-batch.yaml

  destroy-service:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.ACTION == 'destroy-service' }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Clean up
        if: ${{ github.event.inputs.ACTION == 'destroy-service' }}
        run: |
          if [ -d "SocksShop" ]; then
            cd ./SocksShop/infrastructure && \
            terraform destroy -auto-approve || { echo "Terraform destroy failed"; exit 1; }
          fi
